AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  DatabaseName:
    Description: Name of the cluster to create
    Type: String
  EnvironmentName:
    Description: Name of the environment we are deploying to
    Type: String
  ClusterType:
    Description: The type of cluster
    Type: String
    Default: single-node
    AllowedValues:
    - single-node
    - multi-node
  NumberOfNodes:
    Description: Number of nodes to create the cluster with
    Type: Number
    Default: '1'
  NodeType:
    Description: Instance type to create the node with
    Type: String
    Default: dc2.large
    AllowedValues:
    - ds2.xlarge
    - ds2.8xlarge
    - dc2.large
    - dc2.8xlarge
  MasterUserPassword:
    Description: Password for master user in created database/cluster
    Type: String
    NoEcho: true
  InboundTraffic:
    Description: Allow inbound traffic to the cluster from this CIDR range.
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid CIDR range of the form x.x.x.x/x.
  PortNumber:
    Description: The port number on which the cluster accepts incoming connections.
    Type: Number
    Default: '5439'
  SrcDataBucketArn:
    Type: String
    Description: Bucket that this redshift cluster can copy data from.

Conditions:
  IsMultiNodeCluster:
    Fn::Equals:
    - Ref: ClusterType
    - multi-node

Resources:

  RedShiftCopyRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub data-loader-redshift-copy-${EnvironmentName}-${AWS::Region}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service: redshift.amazonaws.com
          Action: sts:AssumeRole
          Condition:
            StringEquals:
              sts:ExternalId:
              - !Sub "arn:aws:redshift:${AWS::Region}:${AWS::AccountId}:dbuser:data-loader-${EnvironmentName}/admin"
      Path: /
      Policies:
      - PolicyName: Policy
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Effect: Allow
            Action:
            - s3:GetObject
            - s3:ListBucket
            - s3:HeadBucket
            - s3:GetBucketLocation
            Resource:
            - !Ref SrcDataBucketArn
            - !Sub ${SrcDataBucketArn}/*

  RedshiftCluster:
    Type: AWS::Redshift::Cluster
    Properties:
      ClusterIdentifier: !Sub data-loader-${EnvironmentName}
      ClusterType: !Ref ClusterType
      NumberOfNodes:
        Fn::If:
        - IsMultiNodeCluster
        - Ref: NumberOfNodes
        - Ref: AWS::NoValue
      NodeType: !Ref NodeType
      DBName: !Sub ${DatabaseName}-${EnvironmentName}
      MasterUsername: admin
      MasterUserPassword: !Ref MasterUserPassword
      IamRoles:
      - !GetAtt RedShiftCopyRole.Arn
      ClusterParameterGroupName: !Ref RedshiftClusterParameterGroup
      VpcSecurityGroupIds:
      - !Ref SecurityGroup
      ClusterSubnetGroupName: !Ref RedshiftClusterSubnetGroup
      PubliclyAccessible: 'true'
      Port: !Ref PortNumber

  RedshiftClusterParameterGroup:
    Type: AWS::Redshift::ClusterParameterGroup
    Properties:
      Description: Cluster parameter group
      ParameterGroupFamily: redshift-1.0
      Parameters:
      - ParameterName: enable_user_activity_logging
        ParameterValue: 'true'

  RedshiftClusterSubnetGroup:
    Type: AWS::Redshift::ClusterSubnetGroup
    Properties:
      Description: Cluster subnet group
      SubnetIds:
      - Fn::ImportValue: !Sub network:${EnvironmentName}:public-subnet-1

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group
      SecurityGroupIngress:
      - CidrIp: !Ref InboundTraffic
        FromPort: !Ref PortNumber
        ToPort: !Ref PortNumber
        IpProtocol: tcp
      VpcId:
        Fn::ImportValue: !Sub network:${EnvironmentName}:vpc-id

  ClusterEndpoint:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub /data-loader/${EnvironmentName}/cluster-endpoint
      Type: String
      Value: !Sub "${RedshiftCluster.Endpoint.Address}"

Outputs:
  ClusterName:
    Description: Name of cluster
    Value: !Ref RedshiftCluster
  ParameterGroupName:
    Description: Name of parameter group
    Value: !Ref RedshiftClusterParameterGroup
  RedshiftClusterSubnetGroupName:
    Description: Name of cluster subnet group
    Value: !Ref RedshiftClusterSubnetGroup
  RedshiftClusterSecurityGroupName:
    Description: Name of cluster security group
    Value: !Ref SecurityGroup